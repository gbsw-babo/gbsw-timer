import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { Input, Heading, Editable,EditableInput, EditablePreview, Link, Text, Box, Alert, AlertIcon, AlertTitle, CloseButton, Button, useColorMode } from "@chakra-ui/react";
import '@kfonts/nanum-gothic';
import '@fortawesome/fontawesome-free';
import { useState } from "react";
import moment from "moment";
import CustomTimer from "../components/CustomTimer"

let outdate: Date = new Date();
let outset = false;
function Settings() {
  let handleUpd = (e:any) => {
    outdate = new Date(Date.parse(e.target.value));
  }
  return (
    <>
      <Text className={styles.settingYearText} fontSize="3vw">
        종료날짜 선택
        <br />
        <Input onChange={handleUpd} type="datetime-local" />
        <br />
        <Button onClick={() => {
          outset = true;
        }} colorScheme="pink">시작</Button>
      </Text>
    </>
  )
}

const Timer: NextPage = () => {
  const [setting, setSetting] = useState(false);
  const [date, setDate] = useState(new Date());
  const [error, setError] = useState(false);
  const [errormessage, setEM] = useState("");
  let Toggle = () => {
    setSetting(!setting);
  }
  const { colorMode, toggleColorMode } = useColorMode()

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Heading className={styles.title} as="h1" size="4xl" mb="2">
          <Editable defaultValue="여기에 주제 입력">
            <EditablePreview />
            <EditableInput />
          </Editable>
        </Heading>
        <p className={styles.description}>
        </p>
        <br />
        {!error ? null :
                <>
                  <Alert style={{borderRadius: "lg"}} status="error">
                    <AlertIcon />
                    <AlertTitle mr={2}>{errormessage}</AlertTitle>
                  </Alert>
                </>
        }
        <Box className={styles.timerBox1} borderWidth="1px" borderColor="#2dd660" borderRadius="lg" overflow="hidden" style={{ fontWeight: 300 }}>
          {setting ? <CustomTimer onClick={Toggle} expiryTimestamp={date} style={{ fontWeight: 400 }} /> :
              <>
              <Text className={styles.settingYearText} fontSize="3vw">
                종료날자 선택
                <br />
                <Input onChange={(e)=>{
                  let d = new Date(Date.parse(e.target.value))
                  if(new Date() > d) return;
                  setDate(d);
                }} type="datetime-local" />
                <br />
                <Button onClick={() => {
                  if(new Date() > date) {
                    setEM("목표일은 지금보다 뒤로 갈 수 없습니다!");
                    setError(true);
                    return;
                  }
                  setError(false);
                  setSetting(true);
                }} colorScheme="pink">시작</Button>
              </Text>
            </>
          }
        </Box>
      </main>

      <footer className={styles.footer}>
        <Link className="ftlink" onClick={() => setDate(moment(new Date()).add(1, 'days').toDate())} target="_blank" hr="https://school.gyo6.net/gbsw">
          <span className={styles.gbsw}><Image src="/symbol-only.png" alt="GBSW Logo" width="50%" height="50%" /></span>
          Gyeongbuk Software HighSchool
        </Link>
        <Text style={{marginRight: '7rem'}}>made by ღ redesigned, jademon</Text>
        <Button onClick={toggleColorMode}>{colorMode === "light" ? "Dark" : "Light"}</Button>
      </footer>
    </div>
  );
};

export default Timer;
