import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { Input, Heading, Editable,EditableInput, EditablePreview, Link, Text, Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, ButtonGroup, useColorMode } from "@chakra-ui/react";
import { useTimer } from "react-timer-hook";
import '@kfonts/nanum-gothic';
import '@fortawesome/fontawesome-free';
import { useEffect, useState } from "react";
import moment from "moment";
import theme from "../theme";

function CustomTimer({ expiryTimestamp }: any) {
  const {
    seconds,
    minutes,
    hours,
    days,
    isRunning,
    start,
    pause,
    resume,
    restart,
  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });


  return (
    <>
    <Text fontSize="1.5vw" className={styles.dday}>{expiryTimestamp.getFullYear()}-{expiryTimestamp.getMonth()+1}-{expiryTimestamp.getDate()} <br /> D-{moment(expiryTimestamp).calendar().includes("Today") ? "DAY" : days+1}</Text>
      <Text fontSize="1.5vw" className={styles.dday}></Text>
      <br />
      <Text className={styles.timerText} fontSize="10vw">{((hours)+(24*days)).toLocaleString('ko-KR', {minimumIntegerDigits: 2})}</Text>
      <Text className={styles.timerText} fontSize="10vw">:</Text>
      <Text className={styles.timerText} fontSize="10vw">{minutes.toLocaleString('ko-KR', {minimumIntegerDigits: 2})}</Text>
      <Text className={styles.timerText} fontSize="10vw">:</Text>
      <Text className={styles.timerText} fontSize="10vw">{seconds.toLocaleString('ko-KR', {minimumIntegerDigits: 2})}</Text>
    </>
  );
}
let outdate: Date = new Date();
let outset = false;
function Settings() {
  let handleUpd = (e:any) => {
    outdate = new Date(Date.parse(e.target.value));
  }
  return (
    <>
      <Text className={styles.settingYearText} fontSize="3vw">
        종료날자 선택
      <br />
      <Input onChange={handleUpd} type="datetime-local" />
      <br />
      <Button onClick={() => {
        outset = true;
      }} colorScheme="pink">시작</Button>
    </Text>
    </>
  )
}

const Timer: NextPage = () => {
  const [setting, setSetting] = useState(false);
  const [date, setDate] = useState(new Date());
  let Toggle = () => {
    setSetting(!setting);
  }
  const { colorMode, toggleColorMode } = useColorMode()

  useEffect(() => {
    const interval = setInterval(() => {
      console.log('updating');
      setSetting(outset);
    }, 100);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Heading className={styles.title} as="h1" size="4xl" mb="2">
          <Editable defaultValue="여기에 주제 입력">
            <EditablePreview />
            <EditableInput />
          </Editable>
        </Heading>
        <p className={styles.description}>
          {/* <Link target="_blank" href="https://school.gyo6.net/gbsw">Gyeongbuk Software HighSchool</Link> */}
          {/* Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code> */}
        </p>
        <br />
        {/* (moment(new Date()).add(2,'days')).toDate() */}
        <Box className={styles.timerBox} borderWidth="1px" borderColor="#2dd660" borderRadius="lg" overflow="hidden" style={{ fontWeight: 300 }}>
          {setting ? <CustomTimer onClick={Toggle} expiryTimestamp={outdate} style={{ fontWeight: 400 }} /> : <Settings />}
        </Box>
        {/* <div className={styles.grid}>
        </div> */}
      </main>

      <footer className={styles.footer}>
      <Link onClick={() => setDate(moment(new Date()).add(1, 'days').toDate())} target="_blank" href="https://school.gyo6.net/gbsw">Gyeongbuk Software HighSchool</Link>
      made by ღ redesigned, jademon
      <a href=""></a>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
        <Button onClick={toggleColorMode}>{colorMode === "light" ? "Dark" : "Light"}</Button>
      </footer>
    </div>
  );
};

export default Timer;
